{"version":3,"sources":["components/DeleteButton.component.jsx","base.js","Auth.js","PrivateRoute.js","components/StartButton.component.jsx","components/StopButton.component.jsx","components/ResetButton.component.jsx","components/CreateClient.component.jsx","components/InsertClimbers.component.jsx","components/ClientList.component.jsx","components/PauseButton.component.jsx","components/ActiveClientList.component.jsx","components/GymPriceDisplay.component.jsx","components/ProductsSelectForm.component.jsx","components/SubscriptionButton.component.jsx","components/DeleteProdsHistory.component.jsx","components/EditClient.component.jsx","components/CreateProduct.component.jsx","components/EditGymPrice.component.jsx","components/Settings.component.jsx","Logo-Climb-House-scris-white.png","components/ResetPass.component.jsx","components/LoginAdmin.component.jsx","components/SignupAdmin.compnent.jsx","components/MainNav.component.jsx","components/ClientSideRules.component.jsx","components/EditAdmin.component.jsx","components/AdminLogs.component.jsx","PublicRoute.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteButton","props","deleteClient","id","a","url","process","ClientId","fetch","method","useState","isLoading","setLoading","useEffect","then","Button","variant","size","disabled","onClick","confirmAlert","title","message","name","buttons","label","refresh","overlayClassName","Spinner","as","animation","role","aria-hidden","style","marginLeft","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","auth","onAuthStateChanged","user","display","alignItems","Provider","value","PrivateRoute","Component","component","rest","useContext","render","routeProps","StartButton","setFirebaseID","uid","startTime","status","disabledButton","firebaseID","paused","stopTime","timeOut","ResetButton","resetTime","due","toString","time","CreateClient","create","reRef","current","getValue","axios","data","email","console","log","setShow","setName","setEmail","show","useRef","capchaOK","setCapchaOk","Alert","onClose","dismissible","Heading","sitekey","ref","onChange","Form","onSubmit","e","preventDefault","inline","Label","htmlFor","srOnly","Control","className","placeholder","target","required","InputGroup","Prepend","Text","FormControl","type","InsertClimbers","insert","adults","kids","noAdult","setAdults","noKids","setKids","width","min","ClientList","alert","setAlert","clients","setClients","setAll","setActive","setClimbers","query","setQuery","counter","setCounter","getFetchUrl","callback","delay","savedCallback","setInterval","clearInterval","useInterval","setTimeout","mounted","get","result","results","active","clibersInGym","fetchData","Row","marginTop","marginRight","xl","lg","md","sm","xs","map","client","Col","padding","CardGroup","Card","border","bg","text","height","Header","background","pausedStatus","fontSize","float","to","_id","Body","Title","color","noOfpeopleClimbing","finalTime","ButtonGroup","PauseButton","pauseTime","resumeTime","isLoadingResume","setLoadingResume","totalClimbers","reduce","accumulator","ctime","b","length","fontWeight","totalPaused","Date","now","timeIn","toFixed","elapsedOnPaused","GymPriceDisplay","ProductsSelectForm","selectedOption","setSelectedOption","qty","setQty","clientId","integer","parseInt","transfer","zIndex","position","Group","backgroundColor","custom","products","option","productName","price","ButtonSub","toggleFunction","subscription","DeleteProdsHistory","prodId","prodQty","prodName","prodTotal","EditClient","prodHistory","setProdhistory","setStatus","prods","setProds","setDue","setFinalTime","sub","setSub","remainigSub","setRemainigSub","setStartTime","setPausedStatus","setTotalPaused","setTimeIn","setTimeOut","setElapsedOnPaused","initialSub","setInitialSub","match","params","statusSub","totalHistory","prev","cur","total","Container","initial","post","item","marginBottom","Settings","onChangeProductName","bind","onChangeProductPrice","state","product_name","product_price","this","setState","newProduct","sendRefresh","EditGymPrice","adult","kid","settings","adultPrice","kidPrice","error","setRefresh","refreshFunction","deleteProduct","Url","getProds","withRouter","onSubmitEmail","sendPasswordResetEmail","borderRadius","history","handleLogin","useCallback","event","elements","password","signInWithEmailAndPassword","push","Image","margin","src","logo","fluid","controlId","handleSignUp","createUserWithEmailAndPassword","userData","fireBaseId","sendEmailVerification","catch","MainNav","Consumer","context","Navbar","expand","Brand","alt","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","href","Link","justifyContent","signOut","ClientSideRules","agree","SetAgree","paddingLeft","paddingRight","hidden","EditAdmin","setLog","admin","activityHistory","obj","postName","emailVerified","metadata","lastSignInTime","sort","timestamp","clientName","start","AdminLogs","datalogs","logs","allTimeTotals","ListGroup","adminEmailName","PublicRoute","restricted","App","path","exact","ActiveClientList","LoginAdmin","SignupAdmin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a04215a.chunk.js","sourcesContent":["import React, {Component,useEffect,useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\nfunction DeleteButton(props){\r\n\r\n\r\n  const deleteClient =async (id)=>{\r\n\r\n    \r\n    const url = `${SERVER_URL}/clients/delete/`+ props.ClientId;\r\n    const res = await fetch(url,{\r\n        method: 'DELETE',\r\n    })\r\n\r\n    \r\n  }\r\n      const [isLoading, setLoading] = useState(false);\r\n      \r\n        \r\n      \r\n    useEffect(() => {\r\n      if (isLoading) {\r\n        deleteClient().then(() => {\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }, [isLoading]);\r\n   \r\n    const handleClick = () => {\r\n      confirmAlert({\r\n        title: 'Confirm action!',\r\n        message: `Delete:  ${props.name}?`,\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              props.refresh()\r\n              setLoading(true)\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => props.refresh()\r\n          }\r\n        ],\r\n        overlayClassName: \"../index.css\"\r\n      })\r\n        \r\n        \r\n    };\r\n\r\n\r\n\r\n    return(\r\n        <Button\r\n        variant=\"warning\"\r\n        size=\"sm\"\r\n        disabled={isLoading}\r\n        onClick={\r\n          !isLoading ? handleClick : null\r\n          \r\n        }\r\n        >\r\n        \r\n        {isLoading ?\r\n          <span>\r\n          <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          />\r\n          <span style={{marginLeft:'5px'}}>Deleting...</span>\r\n          </span>\r\n         \r\n        : 'Delete'}\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default DeleteButton","import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n\r\n});\r\n\r\nexport default app;","import React, { useEffect, useState } from \"react\";\r\nimport app from './base';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n  \r\n\r\n  useEffect(() => {\r\n    app.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n    });\r\n  }, []);\r\n  \r\n  if(pending){\r\n    return <>\r\n    <Spinner style={{display:'flex',alignItems:'center'}} size='100%' animation=\"grow\" variant=\"light\" />\r\n    \r\n    </>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{currentUser}}>\r\n      {!pending&&children}\r\n    </AuthContext.Provider>\r\n  );\r\n}","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  // console.log(currentUser.email);\r\n  // console.log(currentUser);\r\n  let loged\r\n  if (currentUser==null) {\r\n    loged=false\r\n  } else {\r\n    loged=true\r\n  }\r\n  // console.log(loged);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        currentUser ? \r\n          <Component {...routeProps} />\r\n         : \r\n         null\r\n        \r\n      }\r\n    ></Route>\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","import React, {Component,useEffect,useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport app from \"../base\";\r\nimport { AuthProvider } from \"../Auth\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport { AuthContext } from \"../Auth\";\r\nimport { FaPlay } from 'react-icons/fa';\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\nfunction StartButton(props){\r\n  const [firebaseID,setFirebaseID] = useState()\r\n  app.auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      // User is signed in, see docs for a list of available properties\r\n      // https://firebase.google.com/docs/reference/js/firebase.User\r\n      var uid = user.uid;\r\n      // console.log(uid);\r\n      setFirebaseID(uid)\r\n      // ...\r\n    } else {\r\n      // User is signed out\r\n      // ...\r\n    }\r\n  });\r\n\r\n  const startTime =async ()=>{\r\n\r\n    // console.log(firebaseID);\r\n    const url = `${SERVER_URL}/clients/start/`+ props.ClientId;\r\n    const res = await fetch(url,{\r\n        method: 'POST',\r\n    })  \r\n}\r\n    const [isLoading, setLoading] = useState(false);\r\n      \r\n    \r\n      \r\n    useEffect(() => {\r\n      if (isLoading) {\r\n        startTime().then(() => {\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }, [isLoading]);\r\n   \r\n    const handleClick = () => {\r\n        props.refresh()\r\n        setLoading(true)\r\n        \r\n    };\r\n\r\n\r\n\r\n\r\n    return(\r\n        <Button \r\n        variant=\"success\"\r\n        size='1.4em'\r\n        disabled={isLoading,props.status}\r\n        onClick={\r\n          !isLoading ? handleClick : null\r\n          \r\n        }\r\n        >\r\n        \r\n        {isLoading ?\r\n          <span>\r\n          <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size='1.2em'\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          />\r\n          \r\n          </span>\r\n         \r\n        : <FaPlay size='1.4em' />}\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default StartButton","import React, {Component,useEffect,useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { FaPlay, FaStop } from 'react-icons/fa';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport app from \"../base\";\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\nfunction StartButton(props){\r\n\r\n  const [firebaseID,setFirebaseID] = useState()\r\n  app.auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      // User is signed in, see docs for a list of available properties\r\n      // https://firebase.google.com/docs/reference/js/firebase.User\r\n      var uid = user.uid;\r\n      // console.log(uid);\r\n      setFirebaseID(uid)\r\n      // ...\r\n    } else {\r\n      // User is signed out\r\n      // ...\r\n    }\r\n  });\r\n\r\n\r\n\r\n  let disabledButton\r\n    if (props.paused === true) {\r\n        disabledButton=true\r\n    } else {\r\n        disabledButton=false\r\n    }\r\n\r\n  const stopTime =async ()=>{\r\n\r\n\r\n    const url = `${SERVER_URL}/clients/end/${props.ClientId}/${firebaseID}` ;\r\n    const res = await fetch(url,{\r\n        method: 'POST',\r\n        \r\n    })\r\n\r\n}\r\n      const [isLoading, setLoading] = useState(false);\r\n      \r\n        \r\n      \r\n    useEffect(() => {\r\n      if (isLoading) {\r\n        stopTime().then(() => {\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }, [isLoading]);\r\n   \r\n    const handleClick = () => {\r\n      confirmAlert({\r\n        title: 'Confirm action !',\r\n        message: `Stop time for:  ${props.name} ?`,\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              props.refresh()\r\n              setLoading(true)\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => props.refresh()\r\n          }\r\n        ]\r\n      })\r\n        \r\n    };\r\n\r\n;\r\n\r\n    return(\r\n        <>\r\n            {\r\n                props.timeOut > 0 || props.status==false\r\n                    ?\r\n                    <Button\r\n                    \r\n                    variant=\"danger\"\r\n                    size='1.2em'\r\n                    disabled={true}\r\n                    >\r\n                        <FaStop size='1.4em' />\r\n                    </Button>\r\n                    :\r\n                    <Button\r\n                    variant=\"danger\"\r\n                    size='1.2em'\r\n                    disabled={isLoading,disabledButton}\r\n                    onClick={\r\n                    !isLoading ? handleClick : null\r\n                    \r\n                    }\r\n                    >\r\n                    \r\n                    {isLoading ?\r\n                    <span>\r\n                    <Spinner\r\n                    as=\"span\"\r\n                    animation=\"grow\"\r\n                    size='1.4em'\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                    />\r\n                    \r\n                    </span>\r\n                    \r\n                    : <FaStop size='1.4em' />}\r\n                    </Button>\r\n            }\r\n            \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default StartButton","import React, {Component,useEffect,useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { FaPlay, FaStop, FaUndo } from 'react-icons/fa';\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\nfunction ResetButton(props){\r\n\r\n\r\nconst resetTime =async ()=>{\r\n\r\n\r\nconst url = `${SERVER_URL}/clients/reset/`+ props.ClientId;\r\nconst res = await fetch(url,{\r\n    method: 'POST',\r\n})\r\n\r\n\r\n\r\n\r\n\r\n}\r\n  const [isLoading, setLoading] = useState(false);\r\n  \r\n    \r\n  \r\nuseEffect(() => {\r\n  if (isLoading) {\r\n    resetTime().then(() => {\r\n      setLoading(false);\r\n    });\r\n  }\r\n}, [isLoading]);\r\n\r\n\r\n\r\n\r\nconst handleClick = () => {\r\n  confirmAlert({\r\n    title: 'Reset time!',\r\n    message:`${props.name} > ${props.due.toString()}/lei @ ${props.time.toString()}/min`,\r\n    buttons: [\r\n      {\r\n        label: 'Yes',\r\n        onClick: () => {\r\n          props.refresh()\r\n          setLoading(true)\r\n        }\r\n      },\r\n      {\r\n        label: 'No',\r\n        onClick: () => props.refresh()\r\n      }\r\n    ]\r\n  })\r\n    \r\n};\r\n\r\n;\r\n\r\nreturn(\r\n    <Button\r\n    variant=\"warning\"\r\n    size='1.2em'\r\n    disabled={isLoading}\r\n    onClick={\r\n      !isLoading ? handleClick : null\r\n      \r\n    }\r\n    >\r\n    \r\n    {isLoading ?\r\n      <span>\r\n      <Spinner\r\n      as=\"span\"\r\n      animation=\"grow\"\r\n      size='1.4em'\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n      />\r\n      \r\n      </span>\r\n      \r\n    : <FaUndo size='1.4em' />}\r\n    </Button>\r\n)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ResetButton","import React, {Component,useEffect,useRef,useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport axios from 'axios';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\nfunction CreateClient(props){\r\n\r\n    const create =async ()=>{\r\n\r\n\r\n        try {\r\n        const url = `${SERVER_URL}/clients/add`;\r\n        const token = await reRef.current.getValue();\r\n        // console.log(token);\r\n        const response = await axios({\r\n            method: 'POST',\r\n            url: url,\r\n            data:{\r\n                name,\r\n                email \r\n            },\r\n            \r\n          })\r\n          } catch (err) {\r\n            console.log('Some error, please stop that!!!');\r\n            console.log('--------------------------------');\r\n            console.log(err);\r\n            setShow(true)\r\n          }\r\n          setLoading(false)\r\n        \r\n    }\r\n  \r\n        const [isLoading, setLoading] = useState(false);\r\n        const [name,setName] = useState('');\r\n        const [email,setEmail] = useState('')\r\n        const [show, setShow] = useState(false);\r\n        const reRef = useRef();\r\n      \r\n        const onChangeClientName=(e)=>{\r\n            setName(e.target.value)\r\n            }\r\n        const onChangeClientEmail=(e)=>{\r\n            setEmail(e.target.value)\r\n            setShow(false)\r\n            }\r\n        \r\n        \r\n\r\n        const onSubmit = (e) => {\r\n            e.preventDefault();\r\n            confirmAlert({\r\n                title: 'Create user!',\r\n                message: `${name} / Email: ${email}`,\r\n                buttons: [\r\n                  {\r\n                    label: 'Yes',\r\n                    onClick: (e) => {\r\n                        \r\n                        create()\r\n                        setLoading(true)\r\n                        setShow(false)\r\n                        props.refresh()\r\n                    }\r\n                  },\r\n                  {\r\n                    label: 'No',\r\n                    onClick: () => props.refresh()\r\n                  }\r\n                ],\r\n                overlayClassName: \"../index.css\"\r\n              })\r\n            \r\n            // e.preventDefault();\r\n            // create()\r\n            // setLoading(true)\r\n            // setShow(false)\r\n            // props.refresh()\r\n        \r\n        };\r\n        \r\n        const[capchaOK, setCapchaOk] = useState(false)\r\n        \r\n\r\n        const CapchaOk = ()=>{\r\n            if (capchaOK==false) {\r\n                setCapchaOk(true)\r\n            } else {\r\n                setCapchaOk(false)\r\n            }\r\n        }\r\n    \r\n    \r\n\r\n\r\n    return(\r\n        \r\n    <span>\r\n        {\r\n            show \r\n            ?\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n            <Alert.Heading>Some error. Please stop that! </Alert.Heading>\r\n            <p>\r\n            {email} is taken. Try to type in different email.\r\n            </p>\r\n            </Alert>\r\n            :\r\n            null\r\n        }\r\n        \r\n        <ReCAPTCHA sitekey={process.env.REACT_APP_SITE_KEY} ref={reRef} onChange={CapchaOk} />\r\n        <Form onSubmit={onSubmit} inline >\r\n        \r\n        \r\n        <Form.Label htmlFor=\"inlineFormInputName2\" srOnly>\r\n            Name\r\n        </Form.Label>\r\n        <Form.Control\r\n            disabled={!capchaOK}\r\n            className=\"mb-2 mr-sm-2\"\r\n            id=\"inlineFormInputName2\"\r\n            placeholder=\"Ion Popescu\"\r\n            onChange={onChangeClientName}\r\n            required\r\n        />\r\n        <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>\r\n            Email\r\n        </Form.Label>\r\n        <InputGroup className=\"mb-2 mr-sm-2\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text>@</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl disabled={!capchaOK} id=\"inlineFormInputGroupUsername2\" type=\"email\" placeholder=\"Email\" onChange={onChangeClientEmail} />\r\n        </InputGroup>\r\n        \r\n        <Button\r\n        type=\"submit\"\r\n        className=\"mb-2\"\r\n        disabled={!capchaOK}\r\n        \r\n        >\r\n            {isLoading ?\r\n          <span>\r\n          <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          />\r\n          <span style={{marginLeft:'5px'}}>Sending...</span>\r\n          </span>\r\n         \r\n        : 'Submit'}\r\n        </Button>\r\n        \r\n    </Form>\r\n    </span>\r\n    \r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default CreateClient","import React, {Component,useEffect,useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport axios from 'axios';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\nfunction InsertClimbers(props){\r\n    const onChangeAdults=(e)=>{\r\n        setAdults(e.target.value)\r\n        }\r\n    const onChangeKids=(e)=>{\r\n        setKids(e.target.value)\r\n        }\r\n    const insert =async ()=>{\r\n\r\n\r\n        try {\r\n        const url = `${SERVER_URL}/clients/update-numbers/`+props.ClientId;\r\n        \r\n        const response = await axios({\r\n            method: 'POST',\r\n            url: url,\r\n            data:{\r\n                adults:adults,\r\n                kids:kids\r\n            },\r\n            \r\n          })\r\n          } catch (err) {\r\n            console.log('Some error, please stop that!!!');\r\n            console.log('--------------------------------');\r\n            console.log(err);\r\n            setShow(true)\r\n          }\r\n          setLoading(false)\r\n        \r\n    }\r\n  \r\n        const [isLoading, setLoading] = useState(false);\r\n        const [adults,setAdults] = useState(props.noAdult);\r\n        const [kids,setKids] = useState(props.noKids)\r\n        const [show, setShow] = useState(false);\r\n      \r\n        \r\n        // useEffect(()=>{\r\n        //     setAdults(props.noAdult)\r\n        //     setKids(props.noKids)\r\n        //     console.log('insret');\r\n        // },[props.refresh()])\r\n       \r\n\r\n        const onSubmit = (e) => {\r\n            e.preventDefault();\r\n            \r\n            \r\n            \r\n            \r\n            setLoading(true)\r\n            // setShow(false)\r\n            props.refresh()\r\n            insert()\r\n        \r\n        };\r\n        \r\n        \r\n\r\n   \r\n    \r\n    \r\n\r\n\r\n    return(\r\n        \r\n    <span>\r\n       \r\n\r\n        <Form onSubmit={onSubmit} inline >\r\n        \r\n        \r\n        <InputGroup size=\"sm\" className=\"mb-2 mr-sm-2\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text>Adults</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl style={{width:'60px'}} min=\"0\" type='number' className=\"inlineFormInputGroupUsername2\" placeholder={props.noAdult} onChange={onChangeAdults} />\r\n        </InputGroup>\r\n        <InputGroup size=\"sm\" className=\"mb-2 mr-sm-2\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text>Kids</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl style={{width:'60px'}} min=\"0\" type='number' className=\"inlineFormInputGroupUsername2\" placeholder={props.noKids} onChange={onChangeKids} />\r\n        </InputGroup>\r\n\r\n        <Button\r\n        type=\"submit\"\r\n        className=\"mb-2\"\r\n        size=\"sm\"\r\n        inline = 'true'\r\n        \r\n        >\r\n            {isLoading ?\r\n          <span>\r\n          <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          />\r\n          <span style={{marginLeft:'5px'}}>Sending...</span>\r\n          </span>\r\n         \r\n        : 'Ok'}\r\n        </Button>\r\n    </Form>\r\n    </span>\r\n    \r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default InsertClimbers","import React, {Component,useEffect,useState,useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n// import CreateClient from \"./CreateClient.component\";\r\nimport axios from 'axios';\r\nimport DeleteButton from './DeleteButton.component'\r\nimport StartButton from './StartButton.component'\r\nimport StopButton from './StopButton.component'\r\nimport ResetButton from './ResetButton.component'\r\nimport CreateClient from './CreateClient.component'\r\nimport InsertClimbers from './InsertClimbers.component'\r\n\r\n// import { render } from '@testing-library/react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Form from 'react-bootstrap/Form'\r\n// import InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardGroup from 'react-bootstrap/CardGroup'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ClientList(props){\r\n\r\n    \r\n\r\n    \r\n\r\n    const[alert, setAlert] = useState(false);\r\n    const[clients,setClients] = useState([]);\r\n    const[adults,setAdults] = useState(0);\r\n    const[kids,setKids] = useState(0);\r\n    const[all,setAll]=useState();\r\n    const[active,setActive]=useState();\r\n    const[climbers,setClimbers]=useState()\r\n    const[errEnd,setErrEnd]=useState()\r\n    const[query,setQuery] = useState('');\r\n\r\n\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    function useInterval(callback, delay) {\r\n        const savedCallback = useRef();\r\n      \r\n        // Remember the latest callback.\r\n        useEffect(() => {\r\n          savedCallback.current = callback;\r\n        }, [callback]);\r\n      \r\n        // Set up the interval.\r\n        useEffect(() => {\r\n          let id = setInterval(() => {\r\n            savedCallback.current();\r\n          }, delay);\r\n          return () => clearInterval(id);\r\n        }, [delay]);\r\n      }\r\n    \r\n    \r\n\r\n\r\n    useInterval(() => {\r\n        setCounter(counter + 1);\r\n        \r\n      }, 1000);\r\n\r\n\r\n    let ctime = (a,b)=>{\r\n        return b - a\r\n    }\r\n\r\n    function calculateSeconds(a,b){\r\n        var total\r\n         \r\n            if (b===0) {\r\n                return total = 0\r\n            } else {\r\n                return total = ((a-b)/1000).toFixed(0)\r\n            }  \r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(alert) {\r\n          setTimeout(() => {\r\n            setAlert(false);\r\n          }, 1000)\r\n        }\r\n      }, [alert])\r\n\r\n\r\n\r\n\r\n      function getFetchUrl() {\r\n        return `${SERVER_URL}/clients/?search=${query}`;\r\n      }\r\n\r\n      useEffect(()=>{\r\n        let mounted = true;\r\n        \r\n        if(mounted){\r\n            async function fetchData() {\r\n                const result = await axios.get(getFetchUrl())\r\n                setClients(result.data.clients);\r\n                setAll(result.data.results);\r\n                setActive(result.data.active);\r\n                setClimbers(result.data.clibersInGym)\r\n              }\r\n              fetchData()\r\n        }\r\n        \r\n        return ()=>{\r\n            mounted = false\r\n            \r\n            \r\n        } \r\n    \r\n    \r\n        \r\n    },[alert,query])\r\n\r\n    const refresh = ()=>{\r\n        setAlert(true)\r\n        \r\n    }\r\n    const onChangeSearch=(e)=>{\r\n        setQuery(e.target.value)\r\n        // console.log(e.target.value);\r\n    }\r\n   \r\n    return(\r\n    <div>\r\n        <Row > \r\n            <span style={{marginTop:'10px',marginLeft:'15px',marginRight:'15px'}}>\r\n                <h4>All Clients</h4>\r\n                <h5>Create Client</h5>\r\n                <CreateClient refresh={refresh} style={{marginLeft:'5px'}}/>\r\n                {/* <SearchClientForm  refresh={refresh}/> */}\r\n                <Form inline >\r\n        \r\n                    <Form.Label className=\"inlineFormInputGroupUsername2\" srOnly>\r\n                        Email\r\n                    </Form.Label>\r\n                    <InputGroup className=\"mb-2 mr-sm-2\">\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>Search</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl  className=\"inlineFormInputGroupUsername2\" type=\"text\"  onChange={onChangeSearch} />\r\n                    </InputGroup>\r\n                </Form>\r\n            </span>\r\n        </Row>\r\n        <Row style={{marginTop:'10px'}} xl={4} lg={2} md={2} sm={1} xs={1}>\r\n            \r\n        {\r\n            clients.map( client=>(\r\n                <Col style={{padding:'5px'}} key={client._id} >\r\n                    <CardGroup>\r\n                        <Card\r\n                        \r\n                        border=\"dark\"\r\n                        bg='dark'\r\n                        text='light'\r\n                        style={{ width: 'auto',height:'auto' }}\r\n                        className=\"mb-2\"\r\n                        >\r\n                        <Card.Header \r\n                        style={{background:\r\n                            client.timeOut > 0\r\n                            ?\r\n                                client.status===true\r\n                                ?\r\n                                'linear-gradient(180deg, rgba(130,0,0,1) 0%, rgba(171,8,8,1) 50%, rgba(255,0,0,1) 100%)'\r\n                                :\r\n                                'gray'\r\n                            :\r\n                                client.status===true\r\n                                ?\r\n                                'linear-gradient(180deg, rgba(71,120,1,1) 0%, rgba(104,150,8,1) 50%, rgba(107,186,1,1) 100%)'\r\n                                :\r\n                                'gray'\r\n                        }} \r\n                        className=\"mb-2 \">\r\n                            {\r\n                            client.pausedStatus===true\r\n                            ?\r\n                            <span style={{marginLeft:'3px', fontSize:'20px',}}>{client.name} ~ Paused</span>\r\n                            :\r\n                            <span style={{marginLeft:'3px', fontSize:'20px',}}>{client.name}</span>\r\n                            }\r\n                        <span style={{float:'right'}}>\r\n                            <Link style={{marginRight: \"5px\"}}  className=\"btn btn-primary\" to={\"/edit/\"+ client._id}>Details</Link>\r\n                            <DeleteButton\r\n                            ClientId={client._id}\r\n                            refresh={refresh}\r\n                            name={client.name}\r\n                            />\r\n                        </span>\r\n                        \r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                                <Card.Title  >\r\n                                <span >\r\n                                    \r\n                                    <small style={{color:'white'}} >\r\n                                    <cite title=\"Source Title\">\r\n                                        \r\n                                        {\r\n                                        client.noOfpeopleClimbing === 0\r\n                                        ?\r\n                                        'Add climbers to start'\r\n                                        :\r\n                                            client.timeOut > 0\r\n                                            ?\r\n                                            <span>\r\n                                            Started: {client.startTime} ~  {client.finalTime}/min @ {client.due}/lei \r\n                                            </span>\r\n                                            :\r\n                                            <span>\r\n                                            Started: {client.startTime} \r\n                                            </span>\r\n                                        }\r\n\r\n                                    </cite>\r\n                                    </small>\r\n                                </span>\r\n                                </Card.Title>\r\n                            \r\n                            <span>\r\n                            {\r\n                                client.noOfpeopleClimbing === 0\r\n                                ?\r\n                                <InsertClimbers noAdult={client.adults} refresh={refresh} noKids={client.kids} ClientId={client._id}/>\r\n                                \r\n                                :\r\n                                <ButtonGroup size=\"lg\" className=\"mb-2\">\r\n                                    <StartButton ClientId={client._id} refresh={refresh} status={client.status} />\r\n                                    {/* <StopButton ClientId={client._id} refresh={refresh} timeOut={client.timeOut} status={client.status} name={client.name}/>  */}\r\n                                    <ResetButton ClientId={client._id} refresh={refresh} name={client.name} due={client.due} time={client.finalTime}/>\r\n                                </ButtonGroup>\r\n\r\n                            }\r\n                            \r\n                            {/* <InsertClimbers noAdult={client.adults} refresh={refresh} noKids={client.kids} ClientId={client._id}/> */}\r\n                            </span>\r\n                            \r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </CardGroup>\r\n                </Col>\r\n            ))\r\n        }\r\n       \r\n            \r\n            \r\n        </Row>\r\n        \r\n        \r\n        \r\n        \r\n                                            \r\n\r\n    </div>\r\n        \r\n    )\r\n    \r\n}\r\nexport default ClientList\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component,useEffect,useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { FaPause, FaPlay, FaStop, FaUndo } from 'react-icons/fa';\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\nfunction PauseButton(props){\r\n\r\n    let disabledButton\r\n    if (props.timeOut > 0) {\r\n        disabledButton=true\r\n    } else {\r\n        disabledButton=false\r\n    }\r\n\r\n\r\n\r\n\r\nconst pauseTime =async ()=>{\r\n\r\n\r\nconst url = `${SERVER_URL}/clients/paused/`+ props.ClientId;\r\nconst res = await fetch(url,{\r\n    method: 'POST',\r\n})\r\n\r\n}\r\n\r\nconst resumeTime =async ()=>{\r\n\r\n\r\nconst url = `${SERVER_URL}/clients/resume/`+ props.ClientId;\r\nconst res = await fetch(url,{\r\n    method: 'POST',\r\n})\r\n\r\n}\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isLoadingResume, setLoadingResume] = useState(false)\r\n  \r\n    \r\n  \r\nuseEffect(() => {\r\n  if (isLoading) {\r\n    pauseTime().then(() => {\r\n      setLoading(false);\r\n    });\r\n    \r\n  }\r\n  if (isLoadingResume) {\r\n    resumeTime().then(() => {\r\n        setLoadingResume(false);\r\n    });\r\n    \r\n  }\r\n}, [isLoading,isLoadingResume]);\r\n\r\n\r\n\r\n\r\nconst handleClick = () => {\r\n\r\n    props.refresh()\r\n    setLoading(true)\r\n \r\n    \r\n};\r\nconst handleClickResume = () => {\r\n\r\n    props.refresh()\r\n    setLoadingResume(true)\r\n \r\n    \r\n};\r\n\r\n\r\n// console.log('Din pauza: ',props.timeOut, props.name, disabledButton);\r\n\r\n\r\n\r\nreturn(\r\n    <>\r\n    {\r\n    props.paused === false\r\n    ?\r\n    <Button\r\n    variant=\"info\"\r\n    size='1.2em'\r\n    disabled={isLoading,disabledButton}\r\n    onClick={\r\n      !isLoading ? handleClick : null\r\n      \r\n    }\r\n    >\r\n    \r\n    {isLoading ?\r\n      <span>\r\n      <Spinner\r\n      as=\"span\"\r\n      animation=\"grow\"\r\n      size='1.4em'\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n      />\r\n      \r\n      </span>\r\n      \r\n    : <FaPause size='1.4em' />}\r\n    </Button>\r\n    :\r\n    <Button\r\n    variant=\"info\"\r\n    size='1.2em'\r\n    disabled={isLoadingResume,disabledButton}\r\n    onClick={\r\n      !isLoadingResume ? handleClickResume : null\r\n      \r\n    }\r\n    >\r\n    \r\n    {isLoadingResume ?\r\n      <span>\r\n      <Spinner\r\n      as=\"span\"\r\n      animation=\"grow\"\r\n      size='1.4em'\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n      />\r\n      \r\n      </span>\r\n      \r\n    : <FaPlay  size='1.4em' />}\r\n    </Button>\r\n    }\r\n     \r\n    </>\r\n   \r\n)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default PauseButton","import React, {useEffect,useState,useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport StopButton from './StopButton.component'\r\nimport ResetButton from './ResetButton.component'\r\nimport InsertClimbers from './InsertClimbers.component'\r\nimport PauseButton from './PauseButton.component'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardGroup from 'react-bootstrap/CardGroup'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ClientList(){\r\n\r\n    \r\n\r\n    \r\n\r\n    const[alert, setAlert] = useState(false);\r\n    const[clients,setClients] = useState([]);\r\n    // const[adults,setAdults] = useState(0);\r\n    // const[kids,setKids] = useState(0);\r\n    // const[all,setAll]=useState();\r\n    // const[active,setActive]=useState();\r\n    // const[climbers,setClimbers]=useState()\r\n    // const[errEnd,setErrEnd]=useState()\r\n    // console.log(clients);\r\n    let totalClimbers = clients.reduce((accumulator, current) => accumulator + current.noOfpeopleClimbing, 0);\r\n    // console.log(totalClimbers);\r\n\r\n\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    function useInterval(callback, delay) {\r\n        const savedCallback = useRef();\r\n      \r\n        // Remember the latest callback.\r\n        useEffect(() => {\r\n          savedCallback.current = callback;\r\n        }, [callback]);\r\n      \r\n        // Set up the interval.\r\n        useEffect(() => {\r\n          let id = setInterval(() => {\r\n            savedCallback.current();\r\n          }, delay);\r\n          return () => clearInterval(id);\r\n        }, [delay]);\r\n      }\r\n    \r\n    \r\n\r\n\r\n    useInterval(() => {\r\n        setCounter(counter + 1);\r\n        \r\n      }, 10000);\r\n\r\n\r\n    let ctime = (a,b)=>{\r\n        return b - a\r\n    }\r\n\r\n    function calculateSeconds(a,b){\r\n        let total\r\n         \r\n            if (b===0) {\r\n                return total = 0\r\n            } else {\r\n                return total = ((a-b)/1000).toFixed(0)\r\n            }  \r\n    }\r\n    function calculateMins(a,b){\r\n        var total\r\n         \r\n            if (b===0) {\r\n                return total = 0\r\n            } else {\r\n                return total = (((a-b)/1000)/60).toFixed(0)\r\n            }  \r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(alert) {\r\n          setTimeout(() => {\r\n            setAlert(false);\r\n          }, 1000)\r\n        }\r\n      }, [alert])\r\n\r\n\r\n\r\n\r\n      function getFetchUrl() {\r\n        return `${SERVER_URL}/clients/active`;\r\n      }\r\n      useEffect(()=>{\r\n            \r\n          \r\n        let mounted = true;\r\n        \r\n        if(mounted){\r\n            async function fetchData() {\r\n                const result = await axios.get(getFetchUrl())\r\n                setClients(result.data.clients);\r\n                // setAll(result.data.results);\r\n                // setActive(result.data.active);\r\n                // setClimbers(result.data.clibersInGym)\r\n                \r\n                \r\n                \r\n              }\r\n              fetchData()\r\n        }\r\n        \r\n        return ()=>{\r\n            mounted = false\r\n            \r\n            \r\n        } \r\n    \r\n    \r\n        \r\n    },[alert])\r\n\r\n    const refresh = ()=>{\r\n        setAlert(true)\r\n        \r\n    }\r\n   \r\n    return(\r\n    <div>\r\n        <Row > \r\n            <span style={{marginTop:'10px',marginLeft:'15px',marginRight:'15px'}}>\r\n                <h4>Active Clients</h4>\r\n                <h6>Active users: {clients.length} / Total Climbers in Gym: {totalClimbers}</h6>\r\n            </span>\r\n        </Row>\r\n        <Row style={{marginTop:'10px'}} xl={3} lg={2} md={2} sm={1} xs={1}>\r\n            \r\n        {\r\n            clients.map( client=>(\r\n                <Col style={{padding:'5px'}} key={client._id} >\r\n                    <CardGroup>\r\n                        <Card\r\n                        \r\n                        border=\"dark\"\r\n                        bg='dark'\r\n                        text='light'\r\n                        style={{ width: 'auto',height:'auto' }}\r\n                        className=\"mb-2\"\r\n                        >\r\n                        <Card.Header \r\n                        style={{background:\r\n                            client.timeOut > 0\r\n                            ?\r\n                                client.status===true\r\n                                ?\r\n                                'linear-gradient(180deg, rgba(130,0,0,1) 0%, rgba(171,8,8,1) 50%, rgba(255,0,0,1) 100%)'\r\n                                :\r\n                                'gray'\r\n                            :\r\n                                client.status===true\r\n                                ?\r\n                                'linear-gradient(180deg, rgba(71,120,1,1) 0%, rgba(104,150,8,1) 50%, rgba(107,186,1,1) 100%)'\r\n                                :\r\n                                'gray'\r\n                        }} \r\n                        className=\"mb-2 \"> \r\n                        {\r\n                            client.pausedStatus===true\r\n                            ?\r\n                            <span style={{marginLeft:'3px', fontSize:'25px',}}>{client.name} ~ Paused</span>\r\n                            :\r\n                            <span style={{marginLeft:'3px', fontSize:'25px',}}>{client.name}</span>\r\n                        }\r\n                        \r\n                        \r\n                        <span style={{float:'right'}}>\r\n                            <Link style={{marginRight: \"5px\"}}  className=\"btn btn-primary\" to={\"/edit/\"+ client._id}>Details</Link>\r\n                        </span>\r\n                        \r\n                        \r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                                <Card.Title  >\r\n                                <span >\r\n                                    \r\n                                    <small style={{color:'white'}} >\r\n                                    <cite title=\"Source Title\">\r\n\r\n\r\n\r\n\r\n                                        <span style={{fontSize:'15px',color:'white', marginRight:'10px'}} >\r\n                                             {client.startTime} \r\n                                        </span>\r\n\r\n                                        {\r\n                                        client.timeOut\r\n                                        ?\r\n                                        <span style={{fontSize:'15px',color:'green', marginRight:'10', fontWeight:'bolder'}}>\r\n                                            {client.finalTime}/min @ {client.due}/lei\r\n                                        </span>\r\n                                        :\r\n                                            client.pausedStatus === false\r\n                                            ?\r\n                                            \r\n                                            <span style={{fontSize:'15px',color:'white', marginRight:'10px'}}>\r\n                                                { ctime(client.totalPaused,calculateMins(Date.now(),client.timeIn)) }/min\r\n                                            </span>\r\n\r\n                                            \r\n                                            :\r\n                                            <span style={{marginRight:'10px',fontSize:'15px', color:\"red\"}}>\r\n                                                 {client.elapsedOnPaused}/min\r\n                                            </span>\r\n                                        }\r\n\r\n                                        <span style={{fontSize:'15px',color:'white',marginLeft:'10px'}}>\r\n                                                 {client.noOfpeopleClimbing}\r\n                                                (Adults:{client.adults}・Kids:{client.kids})\r\n                                        </span>\r\n\r\n\r\n\r\n                                    </cite>\r\n                                    </small>\r\n                                </span>\r\n                                </Card.Title>\r\n                            \r\n                            <span>\r\n                            {\r\n                                client.noOfpeopleClimbing === 0\r\n                                ?\r\n                                <InsertClimbers noAdult={client.adults} refresh={refresh} noKids={client.kids} ClientId={client._id}/>\r\n                                \r\n                                :\r\n                                <ButtonGroup size=\"lg\" className=\"mb-2\">\r\n                                    {/* <StartButton ClientId={client._id} refresh={refresh} status={client.status} /> */}\r\n                                    <PauseButton ClientId={client._id} refresh={refresh} timeOut={client.timeOut} name={client.name} status={client.status} paused={client.pausedStatus}/>\r\n                                    <StopButton ClientId={client._id} refresh={refresh} timeOut={client.timeOut} status={client.status} name={client.name} paused={client.pausedStatus}/> \r\n                                    <ResetButton ClientId={client._id} refresh={refresh} name={client.name} due={client.due} time={client.finalTime}/>\r\n                                </ButtonGroup>\r\n\r\n                            }\r\n                            \r\n                            {/* <InsertClimbers noAdult={client.adults} refresh={refresh} noKids={client.kids} ClientId={client._id}/> */}\r\n                            </span>\r\n                            \r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </CardGroup>\r\n                </Col>\r\n            ))\r\n        }\r\n       \r\n            \r\n            \r\n        </Row>\r\n        \r\n        \r\n        \r\n        \r\n                                            \r\n\r\n    </div>\r\n        \r\n    )\r\n    \r\n}\r\nexport default ClientList\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component,useEffect,useState,useRef} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nfunction GymPriceDisplay(props){\r\n\r\n    const [gymPrice,setGymPrice]=useState([{}])\r\n    function getFetchUrl() {\r\n      return `${SERVER_URL}/settings`;\r\n    }\r\n  \r\n    useEffect(()=>{\r\n      let mounted = true;\r\n      \r\n      if(mounted){\r\n          async function fetchData() {\r\n              const result = await axios.get(getFetchUrl())\r\n            //   console.log(result.data.settings);\r\n              setGymPrice(result.data.settings);\r\n              \r\n            }\r\n            fetchData()\r\n      }\r\n      \r\n      return ()=>{\r\n          mounted = false\r\n          \r\n          \r\n      } \r\n  \r\n  \r\n      \r\n  },[])\r\n\r\n    return(\r\n        <span style={{color:'white'}}>\r\n            Adults: {gymPrice[0].adultPrice}lei / Kids: {gymPrice[0].kidPrice} \r\n        </span>\r\n    )\r\n\r\n}\r\nexport default GymPriceDisplay","import React, {Component,useEffect,useState} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { FaPlay } from 'react-icons/fa';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\nfunction ProductsSelectForm(props){\r\n\r\n    const [selectedOption, setSelectedOption] = useState(0)\r\n    const [qty, setQty] = useState(0)\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n      \r\n    \r\n      \r\n    useEffect(() => {\r\n      if (isLoading) {\r\n        insert().then(() => {\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }, [isLoading]);\r\n   \r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        \r\n        \r\n        \r\n        setLoading(true)\r\n        // setShow(false)\r\n        props.refresh()\r\n        // insert()\r\n    \r\n    };\r\n\r\n    \r\n        const handleChangeSelect=(e)=>{\r\n            setSelectedOption(e.target.value)\r\n            }\r\n        const handleChangeQty=(e)=>{\r\n            setQty(e.target.value)\r\n            }\r\n        const insert =async ()=>{\r\n    \r\n    \r\n            try {\r\n            const url = `${SERVER_URL}/clients/update-prods/` + props.clientId;\r\n            let text = qty;\r\n            let integer = parseInt(text, 10);\r\n            const response = await axios({\r\n                method: 'POST',\r\n                url: url,\r\n                data:{\r\n                    id:selectedOption,\r\n                    qty: integer\r\n                },\r\n                \r\n              })\r\n              } catch (err) {\r\n                console.log('Some error, please stop that!!!');\r\n                console.log('--------------------------------');\r\n                console.log(err);\r\n                setShow(true)\r\n                \r\n              }\r\n              setLoading(false)\r\n            \r\n        }\r\n    \r\n\r\n    props.transfer(selectedOption)\r\n\r\n    return(\r\n        <span>\r\n            {\r\n            show \r\n            ?\r\n            <Alert style={{zIndex:'1',position:'relative'}} variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n            <Alert.Heading>Some error ! </Alert.Heading>\r\n            <p>\r\n            Please select a product.\r\n            </p>\r\n            </Alert>\r\n            :\r\n            null\r\n        }\r\n        <Form onSubmit={onSubmit}  inline>\r\n            <Form.Group style={{display:'flex', padding: '10px '}}  as={Col} >\r\n           \r\n            <Form.Control required onChange={handleChangeSelect} style={{backgroundColor:'black',color:'white'}} as=\"select\" size=\"lg\" custom>\r\n            {props.products.map((option) => (\r\n            <option    key={option._id} value={option._id}>{option.productName}-{option.price}lei</option>\r\n            ))}\r\n            </Form.Control>\r\n            \r\n            <Form.Control required onChange={handleChangeQty} style={{backgroundColor:'black',color:'white', width:'100px'}} min='0' type=\"number\" placeholder=\"0\" size=\"lg\" />\r\n            <Button\r\n            type=\"submit\"\r\n            size=\"lg\"\r\n            >\r\n                {isLoading ?\r\n            <span>\r\n            <Spinner\r\n            as=\"span\"\r\n            animation=\"grow\"\r\n            size=\"sm\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n            />\r\n            </span>\r\n            \r\n            : 'Send'}\r\n            </Button>\r\n           \r\n            </Form.Group>\r\n            \r\n        \r\n            \r\n        </Form>\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ProductsSelectForm","import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ButtonSub = (props)=>{\r\n    return(\r\n     \r\n        \r\n\r\n        <Button\r\n        variant=\"warning\"\r\n        size='1.2em'\r\n        onClick={props.toggleFunction}\r\n        \r\n        \r\n          \r\n        \r\n        >\r\n          {\r\n              props.subscription===true\r\n              ?\r\n              <span>Unsubscribe</span>\r\n              :\r\n              <span>Subscribe</span>\r\n          }\r\n        </Button>\r\n\r\n\r\n\r\n      \r\n    )\r\n  }\r\n\r\nexport default ButtonSub","import React, {Component,useEffect,useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { RiChatDeleteLine } from \"react-icons/ri\";\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\nfunction DeleteProdsHistory(props){\r\n\r\n\r\n  const deleteClient =async (id)=>{\r\n\r\n    \r\n    const url = `${SERVER_URL}/clients/${props.clientId}/delete-history/${props.prodId}` ;\r\n    const res = await fetch(url,{\r\n        method: 'DELETE',\r\n    })\r\n\r\n    \r\n  }\r\n      const [isLoading, setLoading] = useState(false);\r\n      \r\n        \r\n      \r\n    useEffect(() => {\r\n      if (isLoading) {\r\n        deleteClient().then(() => {\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }, [isLoading]);\r\n   \r\n    const handleClick = () => {\r\n      confirmAlert({\r\n        title: 'Delete product!',\r\n        message: `${props.prodQty} x ${props.prodName} = ${props.prodTotal}/lei ?`,\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              props.refresh()\r\n              setLoading(true)\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => props.refresh()\r\n          }\r\n        ],\r\n        overlayClassName: \"../index.css\"\r\n      })\r\n        \r\n        \r\n    };\r\n\r\n\r\n\r\n    return(\r\n        <Button\r\n        variant=\"danger\"\r\n        size=\"sm\"\r\n        disabled={isLoading}\r\n        onClick={\r\n          !isLoading ? handleClick : null\r\n          \r\n        }\r\n        >\r\n        \r\n        {isLoading ?\r\n          <span>\r\n          <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          />\r\n          \r\n          </span>\r\n         \r\n        : <RiChatDeleteLine size='1.4em' />}\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default DeleteProdsHistory","\r\nimport React, {useEffect,useState,useRef} from 'react';\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ProductsSelectForm from './ProductsSelectForm.component'\r\nimport SubscriptionButton from './SubscriptionButton.component'\r\nimport DeleteProdsHistory from './DeleteProdsHistory.component'\r\nimport { FaEnvelope, FaUserCircle,FaUsers,FaCartPlus,FaCalendarCheck, FaTimesCircle, FaTimes, FaClock, FaTools } from 'react-icons/fa';\r\nimport { IoMdWalk,IoMdTimer } from \"react-icons/io\";\r\nimport StopButton from './StopButton.component'\r\nimport ResetButton from './ResetButton.component'\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\n\r\n\r\nfunction EditClient(props) {\r\n    const [loading,setLoading] = useState(true)\r\n    const [prodHistory, setProdhistory] = useState([]);\r\n    const [adults, setAdults] = useState(0);\r\n    const [status, setStatus] = useState();\r\n    const [kids, setKids] = useState(0);\r\n    const [name,setName] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [prods,setProds] = useState([]);\r\n    const [alert, setAlert] = useState(false);\r\n    const [due,setDue] = useState(0)\r\n    const [finalTime,setFinalTime] = useState(0)\r\n    const [selectedOption, setSelectedOption] = useState(null)\r\n    const [qty,setQty] = useState(0)\r\n    const [sub, setSub] = useState(0)\r\n    const [remainigSub, setRemainigSub] = useState(0)\r\n    const [startTime, setStartTime] = useState()\r\n    const [pausedStatus, setPausedStatus] = useState(false)\r\n    const [totalPaused,setTotalPaused] = useState(0)\r\n    const [timeIn,setTimeIn] = useState(0)\r\n    const [timeOut,setTimeOut] = useState(0)\r\n    const [elapsedOnPaused,setElapsedOnPaused] = useState(0)\r\n    const [initialSub,setInitialSub] = useState(0)\r\n    \r\n\r\n\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if(alert) {\r\n          setTimeout(() => {\r\n            setAlert(false);\r\n          }, 1000)\r\n        }\r\n      }, [alert])\r\n\r\n      const refresh = ()=>{\r\n        setAlert(true)\r\n        \r\n    }\r\n\r\n    function useInterval(callback, delay) {\r\n        const savedCallback = useRef();\r\n      \r\n        // Remember the latest callback.\r\n        useEffect(() => {\r\n          savedCallback.current = callback;\r\n        }, [callback]);\r\n      \r\n        // Set up the interval.\r\n        useEffect(() => {\r\n          let id = setInterval(() => {\r\n            savedCallback.current();\r\n          }, delay);\r\n          return () => clearInterval(id);\r\n        }, [delay]);\r\n      }\r\n    \r\n    \r\n\r\n\r\n    useInterval(() => {\r\n        setCounter(counter + 1);\r\n        \r\n      }, 10000);\r\n\r\n\r\n    let ctime = (a,b)=>{\r\n        return b - a\r\n    }\r\n\r\n    function calculateSeconds(a,b){\r\n        var total\r\n         \r\n            if (b===0) {\r\n                return total = 0\r\n            } else {\r\n                return total = ((a-b)/1000).toFixed(0)\r\n            }  \r\n    }\r\n    function calculateMins(a,b){\r\n      var total\r\n       \r\n          if (b===0) {\r\n              return total = 0\r\n          } else {\r\n              return total = (((a-b)/1000)/60).toFixed(0)\r\n          }  \r\n  }\r\n\r\n    useEffect(()=>{\r\n        let mounted = true;\r\n        if(mounted){\r\n            async function fetchData() {\r\n                function getFetchUrl() {\r\n                    return `${SERVER_URL}/clients/` + props.match.params.id;\r\n                  }\r\n                const result = await axios(getFetchUrl());\r\n                // console.log(result.data.data.client.pausedStatus);\r\n                setAdults(result.data.data.client.adults);\r\n                setKids(result.data.data.client.kids);\r\n                setName(result.data.data.client.name);\r\n                setEmail(result.data.data.client.email);\r\n                setStatus(result.data.data.client.status);\r\n                setProds(result.data.data.products);\r\n                setProdhistory(result.data.data.client.prodHistory);\r\n                setDue(result.data.data.client.due);\r\n                setFinalTime(result.data.data.client.finalTime)\r\n                setSub(result.data.data.client.statusSub)\r\n                setRemainigSub(result.data.data.client.remainigSub)\r\n                setStartTime(result.data.data.client.startTime)\r\n                setPausedStatus(result.data.data.client.pausedStatus)\r\n                setTotalPaused(result.data.data.client.totalPaused)\r\n                setTimeIn(result.data.data.client.timeIn)\r\n                setTimeOut(result.data.data.client.timeOut)\r\n                setElapsedOnPaused(result.data.data.client.elapsedOnPaused)\r\n                setInitialSub(result.data.data.client.initialSub)\r\n\r\n                \r\n                \r\n              }\r\n              fetchData()\r\n        }\r\n        \r\n        return ()=> mounted = false\r\n           \r\n        \r\n         \r\n        \r\n    },[alert])\r\n    \r\n    let trasnfer = (a) => {\r\n        // console.log(a);\r\n        return a\r\n    }\r\n\r\n    const toggle = (e)=>{\r\n\r\n        \r\n        \r\n\r\n      e.preventDefault()\r\n      \r\n      let statusValue\r\n      if (sub===false) {\r\n          statusValue=true\r\n      } else {\r\n          statusValue=false\r\n      }\r\n      \r\n      const value = {\r\n          status: statusValue,\r\n          initial:16\r\n      }\r\n      \r\n\r\n      axios.post(`${SERVER_URL}/clients/subscription/` + props.match.params.id ,value)\r\n      refresh()\r\n      // console.log(sub);\r\n  }\r\n\r\n  let totalHistory = prodHistory.reduce(function(prev, cur) {\r\n    return prev + cur.total;\r\n    }, 0);\r\n\r\n    return(\r\n        \r\n            <div>\r\n               \r\n                <Container >\r\n                    <Row >\r\n                        <Col  style={{backgroundColor:'#2b2b2b',display: 'flex',alignItems:'center'}} sm={8}><FaUserCircle size='1.4em'/><span style={{marginLeft:'5px',fontSize:'30px'}}>{name}</span></Col>\r\n                        <Col  style={{backgroundColor:'#2f2e2e',display: 'flex',alignItems:'center'}} sm={4}><FaEnvelope/> <span style={{marginLeft:'5px'}}>{email}</span></Col>\r\n                    </Row>\r\n                    <Row xl={4} lg={4} md={2} sm={1} xs={1} style={{backgroundColor:'#404040'}} >\r\n                        <Col style={{display: 'flex',alignItems:'center'}}  sm><IoMdWalk size='1em'/><span style={{marginLeft:'5px'}}> User: {status === true ? 'Active' : 'Not Active'}</span></Col>\r\n                        <Col style={{display: 'flex',alignItems:'center'}}  sm><IoMdTimer size='1em'/><span style={{marginLeft:'5px'}}> \r\n                        {startTime==='0'  ? <span>Time not started</span> : <span>{startTime}</span>}</span>\r\n                        </Col>\r\n                        <Col style={{display: 'flex',alignItems:'center'}}  sm><FaUsers size='1em'/><span style={{marginLeft:'5px'}}> \r\n                        {\r\n                        kids === 0 && adults === 0 \r\n                        ?\r\n                        <span>0 clibers</span>\r\n                        :\r\n                        <span>{adults + kids}  @ {adults} adult(s) / {kids} kid(s)</span>\r\n                        }\r\n                        </span>\r\n                        </Col>\r\n                        <Col style={{display: 'flex',alignItems:'center'}}  sm><IoMdTimer size='1em'/>\r\n                            <span style={{marginLeft:'5px'}}> \r\n                             {finalTime > 0 ? <span>Final: {finalTime} min @ {due}/lei</span> : pausedStatus === false ? <span>{ctime(totalPaused,calculateMins(Date.now(),timeIn))}/min</span> : <span>Paused: {elapsedOnPaused}/min</span> }\r\n                            </span>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    <Row xl={4} lg={4} md={2} sm={1} xs={1} style={{backgroundColor:'#404040'}} >\r\n                        <Col style={{display: 'flex',alignItems:'center'}}  sm>\r\n                        <FaCalendarCheck size='1em'/>\r\n                        <span style={{marginLeft:'5px'}}>\r\n                          Subscribed: {\r\n                          sub === true ? 'Yes' : 'No'\r\n                          }\r\n                        </span>\r\n                        </Col>\r\n                        <Col style={{display: 'flex',alignItems:'center'}}  sm>   \r\n                        <FaCalendarCheck size='1em'/>\r\n                        <span style={{marginLeft:'5px'}}>\r\n                          {\r\n                          sub === true ? <span>{initialSub}/{remainigSub} entries remaining</span> : 'n/a'\r\n                          }\r\n                        </span>\r\n                        </Col>   \r\n                    </Row>\r\n                    <Row>\r\n                    <Col  style={{backgroundColor:'#2f2e2e',display: 'flex',alignItems:'center'}}><FaTools size='1.4em'/> <span style={{marginLeft:'5px',fontSize:'20px',padding:'10px'}}>Time/Subscription Control</span></Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col  style={{backgroundColor:'#2f2e2e',display: 'flex',alignItems:'center'}}>\r\n                    <ButtonGroup size=\"lg\" className=\"mb-2\">\r\n                    <SubscriptionButton toggleFunction={toggle} subscription={sub} refresh={refresh} />\r\n                    <StopButton ClientId={props.match.params.id} refresh={refresh} timeOut={timeOut} status={status} name={name}/>\r\n                    <ResetButton ClientId={props.match.params.id} refresh={refresh} name={name} due={due} time={finalTime}/> \r\n                    </ButtonGroup>\r\n                    </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col  style={{backgroundColor:'#2f2e2e',display: 'flex',alignItems:'center'}}><FaCartPlus size='1.4em'/> <span style={{marginLeft:'5px',fontSize:'20px',padding:'10px'}}>Add Products</span></Col>\r\n                    </Row>\r\n                    \r\n                    <Row xl={2} lg={2} md={1} sm={1} xs={1} style={{height:'100px'}}>\r\n                      <Col   style={{backgroundColor:'#2b2b2b',display: 'flex',alignItems:'center'}}>\r\n                          <ProductsSelectForm clientId={props.match.params.id} products={prods} refresh={refresh} transfer={trasnfer}/>\r\n                      </Col>\r\n                      <Col   style={{backgroundColor:'#2b2b2b',display: 'flex',alignItems:'center'}}>\r\n                          <span style={{fontSize:'20px'}}>\r\n                            {sub===true\r\n                            ?\r\n                            `Total : ${totalHistory} lei + 0(Subscribed) lei  = ${totalHistory} lei`\r\n                            :\r\n                            `Total : ${totalHistory} lei + ${due} lei  = ${totalHistory+due} lei`\r\n                            }\r\n                            \r\n                          </span>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row xl={4} lg={3} md={2} sm={2} xs={1} style={{backgroundColor:'#404040'}} >\r\n                              {\r\n                                prodHistory.map((item) => (\r\n                                  <Col key={item._id}>\r\n                                      <Card\r\n                                      bg='secondary'\r\n                                      style={{width:'auto',marginTop:'10px',marginBottom:'10px'}}\r\n                                      text='light'\r\n                                      \r\n                                      \r\n                                    >\r\n                                    <Card.Header>{item.productName}<span style={{float:'right'}}><DeleteProdsHistory clientId={props.match.params.id} refresh={refresh} prodId={item._id} prodName={item.productName} prodQty={item.qty} prodTotal={item.total}/></span></Card.Header>\r\n                                      <Card.Body>\r\n                                        \r\n                                        <Card.Text>\r\n                                          <b>{item.qty}</b> x {item.price} lei/buc = <b>{item.total}</b> lei\r\n                                          \r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                    </Col>\r\n                                    ))\r\n                                    \r\n                              }\r\n                      \r\n                      \r\n                    </Row>\r\n                   \r\n                </Container>  \r\n            \r\n            </div>\r\n\r\n    )\r\n}\r\nexport default EditClient\r\n","import React, {useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport Row from 'react-bootstrap/Row'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\n\r\n// import {Link} from 'react-router-dom';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\nexport default class Settings extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeProductName=this.onChangeProductName.bind(this);\r\n        this.onChangeProductPrice=this.onChangeProductPrice.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.state={\r\n            products:[],\r\n            product_name:'',\r\n            product_price:'',\r\n        }\r\n       \r\n    }\r\n    \r\n    onChangeProductName(e){\r\n        this.setState({\r\n            product_name: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeProductPrice(e){\r\n        this.setState({\r\n            product_price: e.target.value\r\n        })\r\n    }\r\n\r\n    async onSubmit(e){\r\n        e.preventDefault();\r\n        const newProduct= {\r\n            productName: this.state.product_name,\r\n            price: this.state.product_price, \r\n        }\r\n        \r\n        try {\r\n           await axios.post(`${SERVER_URL}/products/add`,newProduct)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n\r\n        \r\n        this.setState({\r\n            product_name:'',\r\n            product_price:''\r\n        })\r\n\r\n        this.props.sendRefresh()\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n\r\n                <Form onSubmit={this.onSubmit} inline>\r\n                <Form.Row className=\"align-items-center\">\r\n                    <Col xs=\"auto\">\r\n                    <Form.Control\r\n                        className=\"mb-2\"\r\n                        id=\"inlineFormInput\"\r\n                        placeholder=\"Product Name\"\r\n                        value={this.state.product_name}\r\n                        onChange={this.onChangeProductName}\r\n                    />\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                    <InputGroup className=\"mb-2\">\r\n                        <FormControl \r\n                        type='number' \r\n                        min='0' \r\n                        value={this.state.product_price}\r\n                        onChange={this.onChangeProductPrice}\r\n                        id=\"inlineFormInputGroup\" \r\n                        placeholder=\"Price\" />\r\n                    </InputGroup>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                    <Button type=\"submit\" className=\"mb-2\">\r\n                        Submit\r\n                    </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n                </Form> \r\n        )\r\n    }\r\n}","import React, {useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport Row from 'react-bootstrap/Row'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\n\r\n// import {Link} from 'react-router-dom';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\nexport default class EditGymPrice extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeProductName=this.onChangeProductName.bind(this);\r\n        this.onChangeProductPrice=this.onChangeProductPrice.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        \r\n        this.state={\r\n            products:[],\r\n            adult:'',\r\n            kid:'',\r\n           \r\n        }\r\n        \r\n    }\r\n    \r\n    componentDidMount() {\r\n        \r\n        axios.get(`${SERVER_URL}/settings/`)\r\n            \r\n            .then((result)=>{\r\n                this.setState({\r\n                    adult:result.data.settings[0].adultPrice,\r\n                    kid:result.data.settings[0].kidPrice\r\n            }) \r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n            )\r\n        \r\n      }\r\n\r\n    \r\n    \r\n    \r\n    onChangeProductName(e){\r\n        this.setState({\r\n            adult: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeProductPrice(e){\r\n        this.setState({\r\n            kid: e.target.value\r\n        })\r\n    }\r\n\r\n    async onSubmit(e){\r\n        e.preventDefault();\r\n        const newProduct= {\r\n            adultPrice: this.state.adult,\r\n            kidPrice: this.state.kid, \r\n        }\r\n        \r\n        try {\r\n           await axios.post(`${SERVER_URL}/settings/edit/5fca11b76d4bcc2cc0d6b9ab`,newProduct)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n\r\n        \r\n        \r\n\r\n        this.props.sendRefresh()\r\n        \r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n                \r\n                <Form onSubmit={this.onSubmit} inline>\r\n                    <span>{this.adult}</span>\r\n                <Form.Row className=\"align-items-center\">\r\n                    <Col xs=\"auto\">\r\n                    <InputGroup className=\"mb-2\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Adults</InputGroup.Text>\r\n                        </InputGroup.Prepend>   \r\n                    <Form.Control\r\n                        \r\n                        type='number' \r\n                        min='0'\r\n                        id=\"inlineFormInput\"\r\n                        style={{width:'100px'}}\r\n                        placeholder={`Adults: ${this.state.adult}`}\r\n                        value={this.state.adult}\r\n                        onChange={this.onChangeProductName}\r\n                    />\r\n                    </InputGroup>\r\n                    </Col>\r\n\r\n                    <Col xs=\"auto\">\r\n                    \r\n                    <InputGroup className=\"mb-2\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Kids</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                         \r\n                        type='number' \r\n                        min='0'\r\n                        style={{width:'100px'}} \r\n                        value={this.state.kid}\r\n                        onChange={this.onChangeProductPrice}\r\n                        id=\"inlineFormInputGroup\" \r\n                        placeholder=\"Kids\" />\r\n                    </InputGroup>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                    <Button type=\"submit\" className=\"mb-2\">\r\n                        Submit\r\n                    </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n                </Form> \r\n        )\r\n    }\r\n}","import React, {useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport CreateProduct from './CreateProduct.component'\r\nimport EditGymPrice from './EditGymPrice.component'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport Card from 'react-bootstrap/esm/Card';\r\nimport { RiChatDeleteLine } from \"react-icons/ri\";\r\n// import {Link} from 'react-router-dom';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\nfunction Settings(props){\r\n    const [refresh,setRefresh] = useState(false)\r\n    const [prods,setProds] = useState([])\r\n\r\n    const refreshFunction = ()=>{\r\n        if (refresh===false) {\r\n            setRefresh(true)\r\n        } else {\r\n            setRefresh(false)\r\n        }\r\n        \r\n    }\r\n    const deleteProduct =async (id)=>{\r\n        const url = `${SERVER_URL}/products/delete/`+ id;\r\n        try {\r\n            await axios(url,{\r\n                method: 'DELETE',\r\n            }) \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n        refreshFunction()\r\n    }\r\n\r\n    function Url() {\r\n        return `${SERVER_URL}/products`;\r\n      }\r\n    async function getProds(){\r\n        try {\r\n        const results = await axios(Url())\r\n        // console.log(results.data.length);\r\n        setProds(results.data)\r\n        } catch (error) {\r\n        console.log(error); \r\n        }\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        getProds()\r\n    },[refresh])\r\n    \r\n    return(\r\n        \r\n            <Container >\r\n            <Row xl={2} lg={2} md={1} sm={1} xs={1} >\r\n                <Col>\r\n                    <h3>Create product</h3>\r\n                    <CreateProduct sendRefresh={refreshFunction}/>\r\n                </Col>\r\n                <Col>\r\n                    <h3>Edit gym price</h3>\r\n                    <EditGymPrice sendRefresh={refreshFunction}/>\r\n                </Col>\r\n                \r\n            \r\n            \r\n            </Row>\r\n            <Row style={{backgroundColor:'#2b2b2b',display: 'flex',alignItems:'center'}} xl={3} lg={3} md={2} sm={1} xs={1}>\r\n                \r\n                {\r\n                    prods.map(item=>(\r\n                        <Col key={item._id}>\r\n                            <Card\r\n                            bg='secondary'\r\n                            style={{width:'100%',marginTop:'10px',marginBottom:'10px'}}\r\n                            text='light'\r\n                            \r\n                            \r\n                        >\r\n                        <Card.Header><b>{item.productName}</b> - {item.price} lei<span style={{float:'right'}}><Button onClick={()=>deleteProduct(item._id)} variant=\"danger\" size=\"sm\"><RiChatDeleteLine size='1.4em' /></Button></span></Card.Header>\r\n                            {/* <Card.Body>\r\n                            <Card.Text>\r\n                                Text\r\n                            </Card.Text>\r\n                            </Card.Body> */}\r\n                        </Card>\r\n                        </Col>\r\n                    ))\r\n                }\r\n                \r\n            </Row>\r\n            </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default Settings","export default __webpack_public_path__ + \"static/media/Logo-Climb-House-scris-white.3c77ef87.png\";","import React, { useCallback, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport app from \"../base\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport axios from 'axios';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\n\r\n\r\nfunction ResetAdmin () {\r\n    const [email, setEmail]=useState('')\r\n    \r\n\r\n    const onChangeEmail = (e)=>{\r\n        e.preventDefault()\r\n        setEmail(e.target.value)\r\n        \r\n    }\r\n    const onSubmitEmail =async (e)=>{\r\n        e.preventDefault()\r\n        try {\r\n            await app.auth().sendPasswordResetEmail(email).\r\n            then(()=>{\r\n\r\n                confirmAlert({\r\n          \r\n                    message: `Reset password send to: ${email}`,\r\n                    buttons: [\r\n                        {\r\n                        label: 'Ok',\r\n                        onClick: () => {\r\n                            \r\n                        }\r\n                        }\r\n                    ],\r\n                    overlayClassName: \"../index.css\"\r\n                })\r\n\r\n            })\r\n        } catch (error) {\r\n            // console.log(error.message);\r\n            confirmAlert({\r\n          \r\n                message: ` ${error.message}`,\r\n                buttons: [\r\n                    {\r\n                    label: 'Ok',\r\n                    onClick: () => {\r\n                        \r\n                    }\r\n                    }\r\n                ],\r\n                overlayClassName: \"../index.css\"\r\n            })\r\n            \r\n        }\r\n    }\r\n  \r\n\r\n\r\n  return (\r\n    <Container style={{backgroundColor:'white',borderRadius:'8px',padding:'10px',marginTop:'5px',color:'black'}}>\r\n    <Row>\r\n        <Col>\r\n        <h2>Reset password</h2>\r\n        <Form onSubmit={onSubmitEmail}>\r\n        <Form.Group >\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control name=\"email\" type='email' placeholder=\"Email\" onChange={onChangeEmail} />\r\n            <Form.Text className=\"text-muted\">\r\n            {/* We'll never share your email with anyone else. */}\r\n            </Form.Text>\r\n        </Form.Group>\r\n        <Button variant=\"success\" type=\"submit\">\r\n            Reset\r\n        </Button>\r\n        </Form>\r\n        \r\n        </Col>\r\n    </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(ResetAdmin);","import React, { useCallback, useContext,useState } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport app from \"../base\";\r\nimport { AuthContext } from \"../Auth\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport ResetPass from './ResetPass.component'\r\nimport Row from 'react-bootstrap/Row'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Image from 'react-bootstrap/Image'\r\nimport logo from \"../Logo-Climb-House-scris-white.png\";\r\nimport { BiLogInCircle } from \"react-icons/bi\"\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\n\r\nconst LoginAdmin = ({ history }) => {\r\n  const [show,setShow]=useState(false)\r\n\r\n  const showReset = (e)=>{\r\n    e.preventDefault()\r\n    if (show==false) {\r\n      setShow(true)\r\n\r\n    } else {\r\n      setShow(false)\r\n    }\r\n  }\r\n  \r\n  const handleLogin = useCallback(\r\n    async event => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await app\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n\r\n        confirmAlert({\r\n          \r\n          message: ` ${error}`,\r\n          buttons: [\r\n            {\r\n              label: 'Ok',\r\n              onClick: () => {\r\n                \r\n              }\r\n            }\r\n          ],\r\n          overlayClassName: \"../index.css\"\r\n        })\r\n        // alert(error.code);\r\n        \r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n\r\n\r\n    <Container>\r\n    <Row>\r\n    <Image style={{margin:'auto'}} src={logo} fluid /> \r\n    </Row>\r\n    <Row>\r\n        <Col>\r\n        <h2>Admin Login</h2>\r\n        <Form onSubmit={handleLogin}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n            <Form.Text className=\"text-muted\">\r\n            {/* We'll never share your email with anyone else. */}\r\n            </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        </Form.Group>\r\n        <ButtonGroup>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n        </Button>\r\n        <Button variant=\"outline-primary\" onClick={showReset}>\r\n            Recover password\r\n        </Button>\r\n        </ButtonGroup>\r\n        \r\n        </Form>\r\n        {\r\n        show==false\r\n        ?\r\n        null\r\n        :\r\n        <ResetPass/>\r\n        }\r\n        </Col>\r\n    </Row>\r\n    \r\n    </Container>\r\n    \r\n  );\r\n};\r\n\r\nexport default withRouter(LoginAdmin);","import React, { useCallback } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport app from \"../base\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport axios from 'axios';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst SignupAdmin = ({ history }) => {\r\n  \r\n  const handleSignUp = useCallback(async event => {\r\n    event.preventDefault();\r\n    const { email, password } = event.target.elements;\r\n    try {\r\n      await app\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email.value, password.value).\r\n          then(\r\n            function success(userData){\r\n              let fireBaseId = userData.user.uid; // The UID of recently created user on firebase\r\n              let email = userData.user.email;\r\n\r\n\r\n              const create =async ()=>{\r\n\r\n\r\n                try {\r\n                const url = `${SERVER_URL}/admins/add`;\r\n        \r\n                const response = await axios({\r\n                    method: 'POST',\r\n                    url: url,\r\n                    data:{\r\n                        \r\n                        email,\r\n                        fireBaseId\r\n                    },\r\n                    \r\n                  })\r\n                  } catch (err) {\r\n                    console.log('Some error, please stop that!!!');\r\n                    console.log('--------------------------------');\r\n                    console.log(err);\r\n                    \r\n                  } \r\n            }\r\n            create()\r\n              \r\n    \r\n          }\r\n          )\r\n\r\n          var user = app.auth().currentUser;\r\n\r\n          user.sendEmailVerification().then(function() {\r\n            // console.log(user);\r\n            confirmAlert({\r\n          \r\n              message: `Confirmation email send to ${user.email}`,\r\n              buttons: [\r\n                {\r\n                  label: 'Ok',\r\n                  onClick: () => {\r\n                    \r\n                  }\r\n                }\r\n              ],\r\n              overlayClassName: \"../index.css\"\r\n            })\r\n            // alert(`Confirmation email send to ${user.email}`)\r\n            \r\n\r\n\r\n            \r\n\r\n\r\n          }).catch(function(error) {\r\n            // An error happened.\r\n          });\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container>\r\n    <Row>\r\n        <Col>\r\n        <h2>Sign Up</h2>\r\n        <Form onSubmit={handleSignUp}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n            <Form.Text className=\"text-muted\">\r\n            {/* We'll never share your email with anyone else. */}\r\n            </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n            Signup\r\n        </Button>\r\n        </Form>\r\n        \r\n        </Col>\r\n    </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignupAdmin);","\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {BrowserRouter as Router, NavLink, Route} from \"react-router-dom\";\r\nimport '../index.css'\r\nimport ClientList from \"../components/ClientList.component\";\r\nimport ActiveClientList from \"../components/ActiveClientList.component\";\r\nimport GymPriceDisplay from \"../components/GymPriceDisplay.component\";\r\nimport EditClient from \"../components/EditClient.component\";\r\nimport Settings from \"../components/Settings.component\";\r\n\r\n\r\nimport logo from \"../Logo-Climb-House-scris-white.png\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Container from 'react-bootstrap/Container'\r\nimport React, { useEffect, useState } from 'react';\r\nimport FormControl from \"react-bootstrap/esm/FormControl\";\r\nimport Form from \"react-bootstrap/esm/Form\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport axios from 'axios';\r\n\r\nimport LoginAdmin from \"../components/LoginAdmin.component\";\r\nimport SignupAdmin from \"../components/SignupAdmin.compnent\";\r\nimport app from \"../base\";\r\nimport { AuthProvider } from \"../Auth\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport { AuthContext } from \"../Auth\";\r\nimport { BiLogInCircle, BiUser } from \"react-icons/bi\"\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nfunction MainNav(props) {\r\n\r\n  const [firebaseID,setFirebaseID] = useState()\r\n  app.auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      // User is signed in, see docs for a list of available properties\r\n      // https://firebase.google.com/docs/reference/js/firebase.User\r\n      var uid = user.uid;\r\n      // console.log(uid);\r\n      setFirebaseID(uid)\r\n      // ...\r\n    } else {\r\n      // User is signed out\r\n      // ...\r\n    }\r\n  });\r\n  \r\n  \r\n  return (\r\n    \r\n    <AuthContext.Consumer>\r\n      {(context) =>\r\n      \r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      {/* <Navbar.Brand href=\"#home\">ClimbHouse</Navbar.Brand> */}\r\n      \r\n      \r\n      \r\n       \r\n      <Navbar.Brand>\r\n      <img\r\n        src={logo}\r\n        width=\"60\"\r\n        height=\"60\"\r\n        className=\"d-inline-block align-top\"\r\n        alt=\"React Bootstrap logo\"\r\n      />\r\n    </Navbar.Brand>\r\n      <Navbar.Toggle  aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse  id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          {/* <Nav.Link href=\"#home\">Home</Nav.Link>\r\n          <Nav.Link href=\"#link\">Link</Nav.Link> */}\r\n          <NavDropdown title=\"Clients\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href=\"/\">All Clients</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"/active\">Active Clients</NavDropdown.Item>\r\n          </NavDropdown>\r\n          <Nav.Item>\r\n            <Nav.Link href=\"/settings\">Settings</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link href=\"/signup\">Register admin</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link href=\"/logs\">Logs</Nav.Link>\r\n          </Nav.Item>\r\n          \r\n        </Nav>\r\n        <Navbar.Text >\r\n          <div style={{ justifyContent:'space-between'}}>\r\n          <span><BiUser/> <a href={`/admins/${firebaseID}`}>{context.currentUser.email}</a> </span>\r\n          <Button size=\"sm\" variant=\"outline-info\" onClick={()=>app.auth().signOut()}><BiLogInCircle/></Button>\r\n          \r\n          </div>\r\n         \r\n        </Navbar.Text>\r\n        \r\n        \r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n\r\n\r\n\r\n      \r\n      }\r\n    </AuthContext.Consumer>\r\n      \r\n      \r\n    \r\n   \r\n  );\r\n}\r\n\r\nexport default MainNav;\r\n","\r\nimport React, {useEffect,useState,useRef} from 'react';\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ProductsSelectForm from './ProductsSelectForm.component'\r\nimport SubscriptionButton from './SubscriptionButton.component'\r\nimport DeleteProdsHistory from './DeleteProdsHistory.component'\r\nimport { FaEnvelope, FaUserCircle,FaUsers,FaCartPlus,FaCalendarCheck, FaTimesCircle, FaTimes, FaClock, FaTools } from 'react-icons/fa';\r\nimport { IoMdWalk,IoMdTimer } from \"react-icons/io\";\r\nimport StopButton from './StopButton.component'\r\nimport ResetButton from './ResetButton.component'\r\nimport Image from 'react-bootstrap/Image'\r\nimport logo from \"../Logo-Climb-House-scris-white.png\";\r\nimport CreateClient from './CreateClient.component'\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\n\r\n\r\nfunction ClientSideRules(props) {\r\n    \r\n    \r\n    const[alert, setAlert] = useState(false);\r\n    const[agree,SetAgree] = useState(false);\r\n\r\n    const refresh = ()=>{\r\n        setAlert(true)\r\n        \r\n    }\r\n\r\n    return(\r\n        <Container style={{backgroundColor:'black', color:'white',  paddingLeft:'20px', paddingRight:'20px'}} fluid>\r\n\r\n  <Row>\r\n    <Col>\r\n    \r\n    <div>\r\n               <h1 >Bine ați venit la <Image style={{margin:'auto', width:'150px'}} src={logo} fluid /> </h1>\r\n               <span>\r\n               <div>\r\n        \r\n        <p><span style={{fontWeight: 400}}>Sala noastră de aventură indoor cu trasee de cățărat pentru adulți și copii.</span></p>\r\n        \r\n        <p><strong>Climb House</strong><span style={{fontWeight: 400}}> este construit după un concept care a luat naștere în vest. Ne propunem să aducem cățăratul și sportul, mai aproape de orașele mari și să oferim o alternativă sportivă și distractivă de petrecere a timpului liber.&nbsp;</span></p>\r\n        \r\n        <p><span style={{fontWeight: 400}}>Avem o experiență de peste 10 ani în alpinism utilitar și lucrul la înălțime și am mai construit astfel de centre în Germania, Anglia, Scoția, Irlanda&nbsp;și Finlanda.</span></p>\r\n        \r\n        <p><span style={{fontWeight: 400}}>Echipamentele de autoasigurare sunt achizitionate din UK de la un producător autorizat cu o experiență de peste 25 de ani.&nbsp;</span><a href=\"https://safedownautobelay.com/about-us/\"><span style={{fontWeight: 400}}>https://safedownautobelay.com/about-us/</span></a><span style={{fontWeight: 400}}>.&nbsp;</span></p>\r\n        <p><span style={{fontWeight: 400}}>Acestea sunt anual verificate de o echipă de experți Safedown&nbsp;după un protocol strict.&nbsp;</span></p>\r\n        \r\n        <p><strong>Care sunt masurile de sigurantă adoptate pentru activitatea de cățărare?</strong></p>\r\n        <ul>\r\n          <ul>\r\n            <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>avem stabilit un maxim de 20 de persoane la 16 trasee de catarat&nbsp;și un slide</span></li>\r\n            <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>lucram cu cele mai sigure echipamente de autoasigurare din lume</span></li>\r\n            <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>sistemele de autoasigurare sunt asigurate&nbsp;în 2 puncte&nbsp;</span></li>\r\n            <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>carabiniera de prindere este 3 lock adică necesită 3 pasi pt&nbsp;deblocare evitându-se astfel complet deblocările accidentale</span></li>\r\n          </ul>\r\n        </ul>\r\n        \r\n        <ul>\r\n          <li><strong><span style={{fontWeight: 400}}>accesorioile de escaladă sunt certificate UIAA&nbsp;(</span><strong>International Climbing and Mountaineering Federation)</strong></strong></li>\r\n        </ul>\r\n        \r\n        <ul>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>podeaua spațiului&nbsp;este în 2 culori, delimitându-se astfel zonele de trecere și zonele care trebuie evitate când sunt cățărători pe traseu</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>fiecare traseu este prevăzut cu un sistem de blocare, astfel încât cățărătorii nu pot pleca pe traseu până nu se asigură.</span></li>\r\n        </ul>\r\n        \r\n        <p><span style={{fontWeight: 400}}>&nbsp;Traseele noastre de cățărat sunt accesibile tuturor persoanelor începand cu varsta de 4-5 ani, care au peste 15 kg și o stare de sanatate fizică si psihică bună.</span></p>\r\n        <p><span style={{fontWeight: 400}}>Clienții au acces în Climb House pe propria răspundere, după ce au citit și înțeles Regulamentul. Accesul în sală reprezintă acceptarea regulamentului nostru.&nbsp;</span></p>\r\n        <p><span style={{fontWeight: 400}}>Pentru minorii sub 14 ani, consimtamantul de participare va fi dat de către părinti sau însotitorii adulti prin acordul scris.</span></p>\r\n        <p><span style={{fontWeight: 400}}>Prin urmare, toți participanții sunt obligati să citească si să-și însușească regulile mai jos menționate</span></p>\r\n        <ol>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Greutatea minimă admisă pentru participanți este de 15 kg iar cea maximă este de 150 kg.&nbsp;</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Purtarea hamului este obligatorie la toate traseele mai puțin la slide iar acesta va fi verificat de către personalul Climb House.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Purtarea căștii este obligatorie&nbsp;</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Atunci când traseele sunt închise cu căsuțele portocalii, se așteaptă ok-ul instructorului, care va asigura cățăratorul. La coborâre se așteaptă ajutorul instructorului care vă va debloca carabiniera și vă va indica următorul tarseu.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Atunci când triunghiurile de blocare sunt pe podea cu fața galbenă în sus, nu se staționează pe ele. Poziția triunghiurilor galbene pe podea indică faptul că o altă persoană se catară pe traseu iar o coborâre a celui care se catara peste cel care stationeaza în aceasta zonă ar putea conduce la accidentari.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Podeaua roșie marchează de asemnenea zona unde nu se staționează.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Echiparea si dezechiparea se face numai de catre personalul Climb House.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Accesul la sala de cățărare se face doar in prezenta personalului Climb House.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>La cățărare pozitia corzii de asigurare trebuie sa fie intre brate.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Carabiniera cu coarda de asigurare va fi montată și demontată doar de catre instructorii Climb House.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>La cățărare este strict interzisa traversarea traseelor pe orizontala. Cățărătorii trebuie să se rezume la traseul de cățărare ales.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>În cazul în care nu veti respecta regulile prezentate la instructaj de către personalul autorizat, veți fi oprit din activitate.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Participantilor nu li se returnează sumele achitate dacă sunt opriți din activitate din cauza nerespectării regulilor.&nbsp;</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>În cazul distrugerii echipamentului de protectie (ham, cască) contravaloarea acestuia va fi suportată de către persoana care l-a închiriat sau de către parinti/însotitori.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>În situaţia în care, dupa ce a început sesiunea de cățărat, participantul consideră că nu mai poate participa la activităţile sportive, suma achitată nu se returnează.</span></li>\r\n          <li style={{fontWeight: 400}}><span style={{fontWeight: 400}}>Toti participanții trebuie să contribuie prin actiunile si atitudinea lor la siguranța și buna desfășurare a activității. Accidentarea unui cațărător de către un altul este responsabilitatea directă a celor implicati, instructorul/societatea fiind exonerat(a) de orice răspundere.</span></li>\r\n        </ol>\r\n        <p><span style={{fontWeight: 800}}>Am citit și înțeles Regulamentul. Sunteți de accord cu el?</span></p>\r\n        \r\n        \r\n      </div>\r\n               </span>\r\n                \r\n            \r\n            </div>\r\n            \r\n            \r\n    </Col>\r\n    \r\n  </Row>\r\n  <Row hidden={!agree} style={{padding:'10px'}}>\r\n    <CreateClient refresh={refresh} style={{marginLeft:'5px'}}/>\r\n  </Row>\r\n  <hr></hr>\r\n  <span >\r\n  <Button variant=\"success\" size='1.2em' onClick={()=>{SetAgree(true)}}>SUNT de accord.</Button>\r\n  <Button variant=\"danger\" size='1.2em' onClick={()=>{SetAgree(false)}}>NU sunt de accord.</Button>\r\n  </span>\r\n  \r\n  <hr></hr>\r\n  \r\n</Container>\r\n            \r\n    )\r\n}\r\nexport default ClientSideRules\r\n","\r\nimport React, {useEffect,useState,useRef} from 'react';\r\nimport axios from 'axios';\r\nimport app from \"../base\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ProductsSelectForm from './ProductsSelectForm.component'\r\nimport SubscriptionButton from './SubscriptionButton.component'\r\nimport DeleteProdsHistory from './DeleteProdsHistory.component'\r\nimport { FaEnvelope, FaUserCircle,FaUsers,FaCartPlus,FaCalendarCheck, FaTimesCircle, FaTimes, FaClock, FaTools, FaInfo } from 'react-icons/fa';\r\nimport { IoMdWalk,IoMdTimer } from \"react-icons/io\";\r\nimport StopButton from './StopButton.component'\r\nimport ResetButton from './ResetButton.component'\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\n\r\n\r\nfunction EditAdmin(props) {\r\n    const [email,setEmail] = useState('');\r\n    const [name,setName] = useState('');\r\n    const [log,setLog] = useState([])\r\n    \r\n    // console.log(props.match.params.firebaseID);\r\n    useEffect(()=>{\r\n        let mounted = true;\r\n        if(mounted){\r\n            async function fetchData() {\r\n                function getFetchUrl() {\r\n                    return `${SERVER_URL}/admins/${props.match.params.firebaseID}` ;\r\n                  }\r\n                const result = await axios.get(getFetchUrl());\r\n                // console.log(result.data.data.admin.activityHistory);\r\n                setEmail(result.data.data.admin.email);\r\n                setName(result.data.data.admin.name);\r\n                setLog(result.data.data.admin.activityHistory)\r\n                \r\n\r\n                \r\n                \r\n              }\r\n              fetchData()\r\n        }\r\n        \r\n        return ()=> mounted = false\r\n           \r\n        \r\n         \r\n        \r\n    },[])\r\n    \r\n    const onChangeAdminName = (e)=>{\r\n        e.preventDefault()\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const onSubmitAdminName = (e)=>{\r\n        e.preventDefault()\r\n        const obj = {\r\n            name\r\n        }\r\n        async function postName(){\r\n            await axios.post(`${SERVER_URL}/admins/update/${props.match.params.firebaseID}`,obj)\r\n        }\r\n        postName()\r\n    }\r\n\r\n    let user = app.auth().currentUser;\r\n    // console.log(user);\r\n\r\n    return(\r\n        \r\n            <div>\r\n               \r\n                <Container >\r\n                    <Row >\r\n                        <Col  style={{backgroundColor:'#2b2b2b',display: 'flex',alignItems:'center'}} sm={5}><FaUserCircle size='1.4em'/><span style={{marginLeft:'5px',fontSize:'30px'}}></span>\r\n                        \r\n                            <Form style={{marginTop:'5px'}} onSubmit={onSubmitAdminName}  inline >\r\n\r\n                            <Form.Label htmlFor=\"inlineFormInputName2\" srOnly>\r\n                                Name\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                className=\"mb-2 mr-sm-2\"\r\n                                id=\"inlineFormInputName2\"\r\n                                placeholder={name}\r\n                                onChange={onChangeAdminName}\r\n                                required\r\n                            />\r\n\r\n\r\n                            <Button type=\"submit\" className=\"mb-2\">Edit</Button>\r\n                            </Form>\r\n                        \r\n                        </Col>\r\n                        <Col  style={{backgroundColor:'#2f2e2e',display: 'flex',alignItems:'center'}} sm={7}><FaEnvelope/> <span style={{marginLeft:'5px'}}>{email} / {name}</span> </Col>\r\n                        \r\n                        \r\n                    </Row>\r\n                    <Row>\r\n                    <Col  style={{backgroundColor:'gray',display: 'flex',alignItems:'center'}} ><FaInfo/><span style={{marginLeft:'5px'}}>{`Email Verified: ${user.emailVerified} | Last SignInTime: ${user.metadata.lastSignInTime}`}</span> </Col>\r\n                    </Row>\r\n                    <Row xl={1} lg={1} md={1} sm={1} xs={1} style={{backgroundColor:'#404040'}} >\r\n                        <Col><h5>Log for {email} </h5></Col>\r\n                        \r\n                        {\r\n                                log.sort((a,b)=>a.timestamp<b.timestamp? 1 : -1).map((item) => (\r\n                                  <Col key={item._id}>\r\n                                      <Card\r\n                                      bg='secondary'\r\n                                      style={{width:'auto',marginTop:'10px',marginBottom:'10px'}}\r\n                                      text='light'\r\n                                      \r\n                                      \r\n                                    >\r\n                                    <Card.Header>{item.clientName}<span style={{float:'right'}}></span></Card.Header>\r\n                                      <Card.Body>\r\n                                        \r\n                                        <Card.Text>\r\n                                          <b>{item.start}</b>/ {item.time} min  = <b>{item.due}</b> lei\r\n                                          \r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                    </Col>\r\n                                    ))\r\n                                    \r\n                              }\r\n\r\n                        \r\n                        \r\n                    </Row>\r\n                    \r\n                   \r\n                </Container>  \r\n            \r\n            </div>\r\n\r\n    )\r\n}\r\nexport default EditAdmin\r\n","\r\nimport React, {useEffect,useState,useRef} from 'react';\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\n\r\n\r\nfunction AdminLogs(props) {\r\n    const [log,setLog] = useState([])\r\n    \r\n    // console.log(props.match.params.firebaseID);\r\n    useEffect(()=>{\r\n        let mounted = true;\r\n        if(mounted){\r\n            async function fetchData() {\r\n                function getFetchUrl() {\r\n                    return `${SERVER_URL}/admins/` ;\r\n                  }\r\n                const result = await axios.get(getFetchUrl());\r\n                // console.log(result.data.log[0].activityHistory.logs);\r\n                // setEmail(result.data.data.admin.email);\r\n                // setName(result.data.data.admin.name);\r\n                let datalogs\r\n                try {\r\n                    datalogs = result.data.log[0].activityHistory.logs\r\n                    setLog(datalogs)\r\n                } catch (error) {\r\n                    console.log('Error: No logs yet');\r\n                }\r\n                \r\n                // if (datalogs===undefined) {\r\n                //     return datalogs = 0\r\n                // } else {\r\n                //     datalogs\r\n                // }\r\n                \r\n                \r\n                \r\n                \r\n\r\n                \r\n                \r\n              }\r\n              fetchData()\r\n        }\r\n        \r\n        return ()=> mounted = false\r\n           \r\n        \r\n         \r\n        \r\n    },[])\r\n    \r\n    let allTimeTotals = log.reduce((accumulator, current) => accumulator + current.due, 0);\r\n    \r\n    \r\n    return(\r\n        \r\n            <div>\r\n               \r\n                <Container >\r\n                \r\n                    <Row xl={1} lg={1} md={1} sm={1} xs={1} style={{backgroundColor:'#404040'}} >\r\n                        <Col><h5>Logs / All Time : {`${allTimeTotals} lei`} </h5></Col>\r\n                        <Col>{\r\n                            log.length===0\r\n                            ?\r\n                            <span>No Logs yet</span>\r\n                            :\r\n                            <span>{`Entries: ${log.length}`} </span>\r\n                        }</Col>\r\n                        \r\n                        {\r\n                                log.sort((a,b)=>a.timestamp<b.timestamp? 1 : -1).map((item) => (\r\n                                    \r\n                                    <ListGroup key={item._id} as=\"ul\">\r\n                                        <ListGroup.Item variant=\"dark\" style={{color:'black'}} as=\"li\">\r\n                                            <span style={{fontSize:'12px'}}><b>{item.start}</b> - Admin: {item.adminEmailName} - Client: {item.clientName} - Time: <b>{item.time} min @ {item.due} lei </b></span>\r\n                                        </ListGroup.Item>\r\n                                        \r\n                                    </ListGroup>\r\n                                    \r\n                                    ))\r\n                                    \r\n                        }\r\n\r\n                        \r\n                        \r\n                    </Row>\r\n                    \r\n                   \r\n                </Container>  \r\n            \r\n            </div>\r\n\r\n    )\r\n}\r\nexport default AdminLogs\r\n","// import { Button } from \"bootstrap\";\r\nimport React, { useContext } from \"react\";\r\nimport { Route, Redirect, Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport Button from 'react-bootstrap/Button'\r\nconst PublicRoute = ({ component: Component,restricted, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  // console.log(currentUser);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        currentUser && restricted ? (\r\n          <Component {...routeProps} />\r\n          \r\n        ) : (\r\n            \r\n            <span>\r\n              {/* <Button href='/login' variant=\"link\" >\r\n            Login \r\n            </Button> */}\r\n              <Component {...routeProps} />\r\n            </span>\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n};\r\n\r\n\r\nexport default PublicRoute","\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, NavLink, Route, Switch} from \"react-router-dom\";\nimport './index.css'\nimport ClientList from \"./components/ClientList.component\";\nimport ActiveClientList from \"./components/ActiveClientList.component\";\nimport GymPriceDisplay from \"./components/GymPriceDisplay.component\";\nimport EditClient from \"./components/EditClient.component\";\nimport Settings from \"./components/Settings.component\";\nimport MainNav from \"./components/MainNav.component\"\n\n\nimport logo from \"./Logo-Climb-House-scris-white.png\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Container from 'react-bootstrap/Container'\nimport React, { useEffect, useState, useContext } from 'react';\nimport FormControl from \"react-bootstrap/esm/FormControl\";\nimport Form from \"react-bootstrap/esm/Form\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport axios from 'axios';\n\n// import { PublicRoute, PrivateRoute } from \"react-private-public-route\";\n\nimport LoginAdmin from \"./components/LoginAdmin.component\";\nimport SignupAdmin from \"./components/SignupAdmin.compnent\";\nimport ResetPass from \"./components/ResetPass.component\";\nimport ClientSideRules from './components/ClientSideRules.component'\nimport EditAdmin from \"./components/EditAdmin.component\";\nimport AdminLogs from \"./components/AdminLogs.component\";\nimport app from \"./base\";\nimport { AuthProvider } from \"./Auth\";\nimport PrivateRoute from \"./PrivateRoute\";\n// import PublicRoute from \"./PublicRoute\";\nimport { BiLogInCircle } from \"react-icons/bi\"\nimport { AuthContext } from \"./Auth\";\nimport PublicRoute from \"./PublicRoute\";\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction App(props) {\n\n  return (\n  <Router>\n\n    <AuthProvider>\n    \n    <PrivateRoute component={MainNav}/>\n    <PublicRoute path='/rules' component={ClientSideRules}/> \n    <Container fluid className=\"color_theme\">\n      <Switch>\n      <PrivateRoute path = '/' exact component={ClientList}/>\n      <PrivateRoute path = '/active' exact component={ActiveClientList}/>\n      <PrivateRoute path = '/edit/:id' component={EditClient}/>\n      <PrivateRoute path = '/settings' component={Settings} />\n      <PrivateRoute path = '/admins/:firebaseID' component={EditAdmin} />\n      <PrivateRoute path = '/logs' component={AdminLogs} />\n      <Route path = '/login' component={LoginAdmin} />\n      \n      <PrivateRoute path = '/signup' component={SignupAdmin} />\n      </Switch>\n    </Container> \n\n    </AuthProvider>\n    \n  </Router>\n    \n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n    // <AuthProvider>\n    // <Router>\n    //         <Switch>\n    //           <PublicRoute exact path=\"/login\" component={LoginAdmin} />\n    //             {/* <PublicRoute\n    //             exact\n    //             restricted\n    //             redirect=\"/homepage\"\n    //             path=\"/restricted\"\n    //             component={Restricted}\n    //             /> */}\n    //             {/* <PrivateRoute\n    //             isAuthenticated={false}\n    //             restricted\n    //             redirect=\"/login\"\n    //             path=\"/homepage\"\n    //             component={Homepage}\n    //             /> */}\n    //         </Switch>\n    //     </Router>\n    //     </AuthProvider>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}